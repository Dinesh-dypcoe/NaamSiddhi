<% layout('./layout/boilerplate') -%>

<div class="pt-20">
    <div class="glass-effect rounded-lg p-8 max-w-4xl mx-auto">
        <h1 class="text-3xl font-nasa text-center mb-8 text-blue-400">Advanced Search</h1>

        <!-- Search Form -->
        <form class="space-y-6" action="/search" method="POST">
            <!-- Basic Information -->
            <div class="space-y-4">
                <h2 class="text-xl font-nasa text-blue-400/80">Basic Information</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <!-- <input id="firstName" type="text" name="firstName" 
       class="..." placeholder="First Name / पहला नाम">
<input id="lastName" type="text" name="lastName" 
       class="..." placeholder="Last Name / अंतिम नाम"> -->
       <div class="relative">
        <input type="text" name="firstName" id="firstNameInput"
            class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all"
            placeholder="First Name / पहला नाम" oninput="fetchSuggestions('firstName')">
        
        <ul id="firstNameSuggestionsList"
            class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md mt-1 absolute max-h-60 overflow-y-auto z-50"
            style="display: none;"></ul>
    </div>
    
    <div class="relative">
        <input type="text" name="lastName" id="lastNameInput"
            class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all"
            placeholder="Last Name / अंतिम नाम" oninput="fetchSuggestions('lastName')">
        
        <ul id="lastNameSuggestionsList"
            class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md mt-1 absolute max-h-60 overflow-y-auto z-50"
            style="display: none;"></ul>
    </div>
                    <div class="relative">
                        <input type="date" 
                               name="dob"
                               class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100 [&::-webkit-calendar-picker-indicator]:opacity-0"
                               onclick="this.nextElementSibling.click()">
                        <input type="button"
                               class="absolute right-3 top-1/2 -translate-y-1/2 cursor-pointer"
                               onclick="this.previousElementSibling.showPicker()"
                               style="border:none; background:transparent;">
                        <svg class="w-5 h-5 text-gray-400 absolute right-3 top-1/2 -translate-y-1/2 pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                        </svg>
                    </div>
                    <select name="gender"
                            class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all">
                        <option value="">Gender / लिंग</option>
                        <option value="male">Male / पुरुष</option>
                        <option value="female">Female / महिला</option>
                        <option value="other">Others / अन्य</option>
                    </select>
                    <input type="text" name="occupation"
                           class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all"
                           placeholder="Occupation / पेशा">
                    <div class="relative">
                        <input type="tel" 
                               name="mNumber"
                               id="mobileNumber"
                               placeholder="Mobile Number / मोबाइल नंबर"
                               pattern="[0-9]{10}"
                               oninput="validateMobile(this)"
                               class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all">
                        <p id="mobileFeedback" class="text-sm text-red-400 mt-1 hidden"></p>
                    </div>
                    <div class="relative">
                        <input type="text" 
                               name="aadharNumber"
                               id="aadharNumber"
                               placeholder="Aadhar Number / आधार नंबर"
                               pattern="[0-9]{12}"
                               oninput="validateAadhar(this)"
                               class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all">
                        <p id="aadharFeedback" class="text-sm text-red-400 mt-1 hidden"></p>
                    </div>
                </div>
            </div>

            <!-- Physical Characteristics -->
            <div class="space-y-4">
                <h2 class="text-xl font-nasa text-blue-400/80">Physical Characteristics</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <input type="number" name="appearance[height]"
                           class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all"
                           placeholder="Height (cm) / ऊंचाई">
                    <input type="number" name="appearance[weight]"
                           class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all"
                           placeholder="Weight (kg) / वजन">
                    <select name="appearance[complexion]"
                            class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all">
                        <option value="">Complexion / रंग</option>
                        <option value="fair">Fair / गरा</option>
                        <option value="medium">Medium / साँवला</option>
                        <option value="dark">Dark / काला</option>
                    </select>
                    <select name="appearance[build]"
                            class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all">
                        <option value="">Build / शारीरिक बनावट</option>
                        <option value="slim">Slim / पतला</option>
                        <option value="average">Average / सामान्य</option>
                        <option value="athletic">Athletic / एथलेटिक</option>
                        <option value="heavy">Heavy / भारी</option>
                    </select>
                </div>
            </div>

            <!-- Address Information -->
            <div class="space-y-4">
                <h2 class="text-xl font-nasa text-blue-400/80">Address Information</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <input type="text" name="address[location]"
                           class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all"
                           placeholder="Location / स्थान">
                    <input type="text" name="address[city]"
                           class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all"
                           placeholder="City / शहर">
                    <input type="text" name="address[district]"
                           class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all"
                           placeholder="District / जि���ा">
                    <input type="text" name="address[state]"
                           class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all"
                           placeholder="State / राज्य">
                </div>
            </div>

            <div class="flex justify-center mt-6">
                <button type="submit" 
                        class="bg-blue-500 hover:bg-blue-600 text-white font-nasa px-8 py-3 rounded-md transition-all transform hover:scale-105">
                    Search / खोजें
                </button>
            </div>
        </form>

        <!-- Results Section -->
        <% if (profiles && profiles.length > 0) { %>
            <div class="mt-12 space-y-6">
                <% profiles.forEach(profile => { %>
                    <div class="glass-effect rounded-lg p-6 hover:border-blue-400/50 transition-all">
                        <div class="flex justify-between items-start">
                            <h3 class="text-xl font-nasa text-blue-400">
                                <%= profile.firstNameEnglish %> <%= profile.lastNameEnglish %>
                                <span class="text-sm text-gray-400">(<%= profile.firstNameHindi %> <%= profile.lastNameHindi %>)</span>
                            </h3>
                            <span class="bg-blue-500/20 text-blue-400 px-3 py-1 rounded-full text-sm">
                                <%= profile.matchPercentage %>% Match
                            </span>
                        </div>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
                            <div class="space-y-2">
                                <p><span class="text-gray-400">Role:</span> <%= profile.role %></p>
                                <p><span class="text-gray-400">Gender:</span> <%= profile.gender %></p>
                                <p><span class="text-gray-400">DOB:</span> <%= new Date(profile.dob).toLocaleDateString() %></p>
                            </div>
                            <div class="space-y-2">
                                <p><span class="text-gray-400">Mobile:</span> <%= profile.mNumber %></p>
                                <p><span class="text-gray-400">ID:</span> <%= profile.id %></p>
                            </div>
                        </div>
                        <!-- Add Action Buttons -->
                        <div class="flex justify-end mt-4 space-x-3">
                            <a href="/record/<%= profile.id %>" 
                               class="bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 font-nasa px-4 py-2 rounded-md transition-all flex items-center">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
                                </svg>
                                View Details
                            </a>
                            <a href="/record/<%= profile.id %>/edit"
                               class="bg-green-500/20 hover:bg-green-500/30 text-green-400 font-nasa px-4 py-2 rounded-md transition-all flex items-center">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                                </svg>
                                Edit
                            </a>
                        </div>
                    </div>
                <% }); %>
            </div>
        <% } else if (profiles) { %>
            <div class="mt-8 text-center text-gray-400">
                No profiles found. Please adjust your search criteria.
            </div>
        <% } %>
    </div>
</div>

<script>
    console.log('Search page script loaded');

    // Add input event listeners for both fields
    const firstNameInput = document.getElementById('firstNameInput');
    const lastNameInput = document.getElementById('lastNameInput');

    firstNameInput.addEventListener('input', () => {
        console.log('First name input changed:', firstNameInput.value);
        fetchSuggestions('firstName');
    });

    lastNameInput.addEventListener('input', () => {
        console.log('Last name input changed:', lastNameInput.value);
        fetchSuggestions('lastName');
    });

    // Update fetchSuggestions function with debugging
    async function fetchSuggestions(type) {
        const input = document.getElementById(`${type}Input`).value;
        console.log(`Fetching suggestions for ${type}:`, input);
        
        const suggestionsList = document.getElementById(`${type}SuggestionsList`);
        const otherType = type === 'firstName' ? 'lastName' : 'firstName';
        const otherSuggestionsList = document.getElementById(`${otherType}SuggestionsList`);

        // Hide the other suggestion list
        otherSuggestionsList.style.display = 'none';

        if (input.trim().length < 2) {
            console.log('Input too short, hiding suggestions');
            suggestionsList.style.display = 'none';
            return;
        }

        try {
            console.log('Making API request...');
            const response = await fetch(`/api/suggestions?type=${type}&query=${encodeURIComponent(input)}`);
            console.log('API response:', response);
            
            if (!response.ok) {
                throw new Error(`Failed to fetch suggestions: ${response.status} ${response.statusText}`);
            }
            
            const suggestions = await response.json();
            console.log('Received suggestions:', suggestions);
            
            if (suggestions.length > 0) {
                suggestionsList.innerHTML = suggestions.map(suggestion => {
                    const displayName = type === 'firstName' ? 
                        `${suggestion.firstNameEnglish || ''} / ${suggestion.firstNameHindi || ''}` :
                        `${suggestion.lastNameEnglish || ''} / ${suggestion.lastNameHindi || ''}`;
                    const selectValue = type === 'firstName' ? 
                        suggestion.firstNameEnglish : suggestion.lastNameEnglish;
                        
                    return `
                        <li class="px-4 py-2 cursor-pointer hover:bg-blue-400/10 transition-all text-white"
                            onclick="selectSuggestion('${type}', '${selectValue}')">
                            ${displayName}
                        </li>
                    `;
                }).join('');
                suggestionsList.style.display = 'block';
            } else {
                console.log('No suggestions found');
                suggestionsList.style.display = 'none';
            }
        } catch (error) {
            console.error('Error fetching suggestions:', error);
            suggestionsList.style.display = 'none';
        }
    }

    // Function to handle suggestion selection
    function selectSuggestion(type, value) {
        console.log(`Selecting suggestion for ${type}:`, value);
        const input = document.getElementById(`${type}Input`);
        input.value = value;
        document.getElementById(`${type}SuggestionsList`).style.display = 'none';
    }

    // Add click event listener to document to hide suggestions when clicking outside
    document.addEventListener('click', function(e) {
        const firstNameSuggestions = document.getElementById('firstNameSuggestionsList');
        const lastNameSuggestions = document.getElementById('lastNameSuggestionsList');
        const firstNameInput = document.getElementById('firstNameInput');
        const lastNameInput = document.getElementById('lastNameInput');

        if (e.target !== firstNameInput && e.target !== lastNameInput) {
            firstNameSuggestions.style.display = 'none';
            lastNameSuggestions.style.display = 'none';
        }
    });

    function validateAadhar(input) {
        const feedback = document.getElementById('aadharFeedback');
        const value = input.value.replace(/\D/g, ''); // Remove non-digits
        input.value = value; // Update input to show only digits

        if (value.length === 0) {
            feedback.classList.add('hidden');
            input.classList.remove('border-red-400', 'border-green-400');
            return;
        }

        if (value.length !== 12) {
            feedback.textContent = `Please enter 12 digits. Current length: ${value.length} digits`;
            feedback.classList.remove('hidden');
            feedback.classList.remove('text-green-400');
            feedback.classList.add('text-red-400');
            input.classList.add('border-red-400');
            input.classList.remove('border-green-400');
        } else {
            feedback.textContent = 'Valid Aadhar number format';
            feedback.classList.remove('hidden');
            feedback.classList.remove('text-red-400');
            feedback.classList.add('text-green-400');
            input.classList.remove('border-red-400');
            input.classList.add('border-green-400');
        }
    }

    function validateMobile(input) {
        const feedback = document.getElementById('mobileFeedback');
        const value = input.value.replace(/\D/g, ''); // Remove non-digits
        input.value = value; // Update input to show only digits

        if (value.length === 0) {
            feedback.classList.add('hidden');
            input.classList.remove('border-red-400', 'border-green-400');
            return;
        }

        if (value.length !== 10) {
            feedback.textContent = `Please enter 10 digits. Current length: ${value.length} digits`;
            feedback.classList.remove('hidden');
            feedback.classList.remove('text-green-400');
            feedback.classList.add('text-red-400');
            input.classList.add('border-red-400');
            input.classList.remove('border-green-400');
        } else {
            feedback.textContent = 'Valid mobile number format';
            feedback.classList.remove('hidden');
            feedback.classList.remove('text-red-400');
            feedback.classList.add('text-green-400');
            input.classList.remove('border-red-400');
            input.classList.add('border-green-400');
        }
    }
</script>