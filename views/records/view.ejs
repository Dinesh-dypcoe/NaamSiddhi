<% layout('./layout/boilerplate') -%>

<div class="pt-20">
    <div class="glass-effect rounded-lg p-8 max-w-4xl mx-auto">
        <!-- Header with Actions -->
        <div class="flex justify-between items-start mb-8">
            <h1 class="text-3xl font-nasa text-blue-400">Profile #<%= record.id %></h1>
            <div class="flex space-x-4">
                <a href="/record/<%= record.id %>/edit" 
                   class="bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 font-nasa px-4 py-2 rounded-md transition-all">
                    Edit Record
                </a>
                <form action="/record/<%= record.id %>?_method=DELETE" method="POST" class="inline">
                    <button type="submit" 
                            class="bg-red-500/20 hover:bg-red-500/30 text-red-400 font-nasa px-4 py-2 rounded-md transition-all"
                            onclick="return confirm('Are you sure you want to delete this record?')">
                        Delete Record
                    </button>
                </form>
            </div>
        </div>

        <!-- Profile Header with Image -->
        <div class="flex items-start space-x-8 mb-8">
            <div class="w-48 h-48 rounded-lg overflow-hidden glass-effect profile-image">
                <img src="<%= record.images.find(img => img.type === 'profile')?.url || '/images/default-profile.png' %>" 
                     alt="Profile Photo"
                     class="w-full h-full object-cover"
                     onerror="this.src='/images/default-profile.png'">
            </div>
            <div class="flex-1">
                <div class="space-y-4">
                    <div>
                        <h2 class="text-2xl font-nasa text-blue-400">
                            <%= record.firstNameEnglish %> <%= record.middleNameEnglish || '' %> <%= record.lastNameEnglish || '' %>
                            <span class="text-lg text-gray-400">
                                (<%= record.firstNameHindi %> <%= record.middleNameHindi || '' %> <%= record.lastNameHindi || '' %>)
                            </span>
                        </h2>
                        <p class="text-gray-400">
                            <%= record.occupationEnglish || 'Not Specified' %>
                            <% if (record.occupationHindi) { %>
                                <span class="text-sm">(<%= record.occupationHindi %>)</span>
                            <% } %>
                        </p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Status Badge -->
        <div class="flex items-center justify-between mb-8">
            <div>
                <span class="px-3 py-1 rounded-full text-sm font-nasa
                    <%= record.status === 'active' ? 'bg-green-500/20 text-green-400' : 
                       record.status === 'pending' ? 'bg-yellow-500/20 text-yellow-400' : 
                       'bg-red-500/20 text-red-400' %>">
                    <%= record.status.charAt(0).toUpperCase() + record.status.slice(1) %>
                </span>
            </div>

            <!-- Link Case Button -->
            <button onclick="showLinkCaseModal()"
                    class="bg-purple-500/20 hover:bg-purple-500/30 text-purple-400 font-nasa px-4 py-2 rounded-md transition-all flex items-center">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1" />
                </svg>
                Link to Case
            </button>
        </div>

        <!-- Personal Information -->
        <div class="glass-effect p-6 rounded-lg mb-8">
            <h3 class="text-xl font-nasa text-blue-400/80 mb-4">Personal Information</h3>
            <div class="grid grid-cols-2 md:grid-cols-3 gap-6">
                <div>
                    <p class="text-gray-400">Date of Birth</p>
                    <p class="text-white"><%= record.dob ? new Date(record.dob).toLocaleDateString() : 'Not Specified' %></p>
                </div>
                <div>
                    <p class="text-gray-400">Gender</p>
                    <p class="text-white"><%= record.gender || 'Not Specified' %></p>
                </div>
            </div>
        </div>

        <!-- Contact Information -->
        <div class="glass-effect p-6 rounded-lg mb-8">
            <h3 class="text-xl font-nasa text-blue-400/80 mb-4">Contact Information</h3>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <p class="text-gray-400">Mobile Number</p>
                    <p class="text-white"><%= record.mNumber || 'Not Specified' %></p>
                </div>
                <div>
                    <p class="text-gray-400">Aadhar Number</p>
                    <p class="text-white"><%= record.aadharNumber || 'Not Specified' %></p>
                </div>
            </div>
        </div>

        <!-- Address Information -->
        <div class="glass-effect p-6 rounded-lg mb-8">
            <h3 class="text-xl font-nasa text-blue-400/80 mb-4">Address Information</h3>
            <div class="grid grid-cols-2 gap-6">
                <div>
                    <p class="text-gray-400">Location</p>
                    <p class="text-white">
                        <%= record.address?.locationEnglish || 'Not Specified' %>
                        <% if (record.address?.locationHindi) { %>
                            <span class="text-sm text-gray-400">(<%= record.address.locationHindi %>)</span>
                        <% } %>
                    </p>
                </div>
                <div>
                    <p class="text-gray-400">City</p>
                    <p class="text-white">
                        <%= record.address?.cityEnglish || 'Not Specified' %>
                        <% if (record.address?.cityHindi) { %>
                            <span class="text-sm text-gray-400">(<%= record.address.cityHindi %>)</span>
                        <% } %>
                    </p>
                </div>
                <div>
                    <p class="text-gray-400">District</p>
                    <p class="text-white">
                        <%= record.address?.districtEnglish || 'Not Specified' %>
                        <% if (record.address?.districtHindi) { %>
                            <span class="text-sm text-gray-400">(<%= record.address.districtHindi %>)</span>
                        <% } %>
                    </p>
                </div>
                <div>
                    <p class="text-gray-400">State</p>
                    <p class="text-white">
                        <%= record.address?.stateEnglish || 'Not Specified' %>
                        <% if (record.address?.stateHindi) { %>
                            <span class="text-sm text-gray-400">(<%= record.address.stateHindi %>)</span>
                        <% } %>
                    </p>
                </div>
            </div>
        </div>

        <!-- Appearance Details -->
        <div class="glass-effect p-6 rounded-lg mb-8">
            <h3 class="text-xl font-nasa text-blue-400/80 mb-4">Appearance Details</h3>
            <div class="grid grid-cols-2 md:grid-cols-3 gap-6">
                <div>
                    <p class="text-gray-400">Height</p>
                    <p class="text-white"><%= record.appearance?.height ? `${record.appearance.height} cm` : 'Not Specified' %></p>
                </div>
                <div>
                    <p class="text-gray-400">Weight</p>
                    <p class="text-white"><%= record.appearance?.weight ? `${record.appearance.weight} kg` : 'Not Specified' %></p>
                </div>
                <div>
                    <p class="text-gray-400">Build</p>
                    <p class="text-white"><%= record.appearance?.build || 'Not Specified' %></p>
                </div>
                <div>
                    <p class="text-gray-400">Complexion</p>
                    <p class="text-white"><%= record.appearance?.complexion || 'Not Specified' %></p>
                </div>
            </div>

            <!-- Distinguishing Features -->
            <div class="mt-6">
                <h4 class="text-lg font-nasa text-blue-400/60 mb-4">Distinguishing Features</h4>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <p class="text-gray-400">Facial Features</p>
                        <p class="text-white"><%= record.appearance?.facialFeatures || 'Not Specified' %></p>
                    </div>
                    <div>
                        <p class="text-gray-400">Scars/Marks</p>
                        <p class="text-white"><%= record.appearance?.scars || 'Not Specified' %></p>
                    </div>
                    <div>
                        <p class="text-gray-400">Tattoos</p>
                        <p class="text-white"><%= record.appearance?.tattoos || 'Not Specified' %></p>
                    </div>
                    <div>
                        <p class="text-gray-400">Other Features</p>
                        <p class="text-white"><%= record.appearance?.otherFeatures || 'Not Specified' %></p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Family Details -->
        <% if (record.familyDetails && record.familyDetails.length > 0) { %>
            <div class="glass-effect p-6 rounded-lg mb-8">
                <h3 class="text-xl font-nasa text-blue-400/80 mb-4">Family Details</h3>
                <div class="space-y-4">
                    <% record.familyDetails.forEach(member => { %>
                        <div class="glass-effect p-4 rounded-lg">
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                                <div>
                                    <p class="text-gray-400">Name</p>
                                    <p class="text-white">
                                        <%= member.name.english %>
                                        <span class="text-sm text-gray-400">(<%= member.name.hindi %>)</span>
                                    </p>
                                </div>
                                <div>
                                    <p class="text-gray-400">Relation</p>
                                    <p class="text-white">
                                        <%= member.relation.english %>
                                        <span class="text-sm text-gray-400">(<%= member.relation.hindi %>)</span>
                                    </p>
                                </div>
                                <div>
                                    <p class="text-gray-400">Contact</p>
                                    <p class="text-white"><%= member.contact || 'Not Specified' %></p>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        <% } else { %>
            <div class="glass-effect p-6 rounded-lg mb-8">
                <h3 class="text-xl font-nasa text-blue-400/80 mb-4">Family Details</h3>
                <p class="text-gray-400 italic">No family details provided</p>
            </div>
        <% } %>

        <!-- ID Documents -->
        <div class="glass-effect p-6 rounded-lg mb-8">
            <h3 class="text-xl font-nasa text-blue-400/80 mb-4">ID Documents</h3>
            <% if (record.images.find(img => img.type === 'identification')) { %>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <img src="<%= record.images.find(img => img.type === 'identification').url %>" 
                             alt="ID Document"
                             class="w-full h-48 object-cover rounded-lg"
                             onerror="this.src='/images/default-document.png'">
                        <p class="text-gray-400 mt-2 text-center">ID Document</p>
                    </div>
                </div>
            <% } else { %>
                <p class="text-gray-400 italic">No ID documents uploaded</p>
            <% } %>
        </div>

        <!-- Linked Cases -->
        <div class="glass-effect p-6 rounded-lg mb-8">
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-xl font-nasa text-blue-400/80">Linked Cases</h3>
                <button onclick="showLinkCaseModal()"
                        class="bg-purple-500/20 hover:bg-purple-500/30 text-purple-400 font-nasa px-4 py-2 rounded-md transition-all flex items-center text-sm">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
                    </svg>
                    Link New Case
                </button>
            </div>

            <% if (record.cases && record.cases.length > 0) { %>
                <div class="space-y-4">
                    <% record.cases.forEach(caseLink => { %>
                        <div class="glass-effect p-4 rounded-lg">
                            <div class="flex justify-between items-start">
                                <div class="space-y-2">
                                    <div class="flex items-center space-x-3">
                                        <span class="text-lg text-blue-400 font-nasa">
                                            Case #<%= caseLink.case.caseNumber %>
                                        </span>
                                        <span class="px-2 py-1 rounded-full text-xs
                                            <%= caseLink.case.status === 'active' ? 'bg-green-500/20 text-green-400' : 
                                               caseLink.case.status === 'pending' ? 'bg-yellow-500/20 text-yellow-400' : 
                                               'bg-red-500/20 text-red-400' %>">
                                            <%= caseLink.case.status.charAt(0).toUpperCase() + caseLink.case.status.slice(1) %>
                                        </span>
                                        <span class="px-2 py-1 rounded-full text-xs bg-blue-500/20 text-blue-400">
                                            <%= caseLink.role.charAt(0).toUpperCase() + caseLink.role.slice(1) %>
                                        </span>
                                    </div>
                                    <% if (caseLink.case.description) { %>
                                        <p class="text-gray-400 text-sm">
                                            <%= caseLink.case.description.english %>
                                            <% if (caseLink.case.description.hindi) { %>
                                                <span class="text-xs">(<%= caseLink.case.description.hindi %>)</span>
                                            <% } %>
                                        </p>
                                    <% } %>
                                    <% if (caseLink.case.location) { %>
                                        <p class="text-gray-400 text-xs">
                                            Location: <%= caseLink.case.location.district.english %>, 
                                            <%= caseLink.case.location.state.english %>
                                        </p>
                                    <% } %>
                                </div>
                                <div class="flex space-x-2">
                                    <a href="/cases/<%= caseLink.case._id %>" 
                                       class="bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 px-3 py-1 rounded-md text-sm transition-all">
                                        View Case
                                    </a>
                                    <button onclick="unlinkCase('<%= record.id %>', '<%= caseLink.case._id %>')"
                                            class="bg-red-500/20 hover:bg-red-500/30 text-red-400 px-3 py-1 rounded-md text-sm transition-all">
                                        Unlink
                                    </button>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            <% } else { %>
                <p class="text-gray-400 italic">No cases linked to this profile</p>
            <% } %>
        </div>
    </div>
</div> 

<!-- Link Case Modal -->
<div id="linkCaseModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
    <div class="bg-space-dark glass-effect rounded-lg p-8 max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto">
        <div class="flex justify-between items-center mb-6">
            <h3 class="text-xl font-nasa text-blue-400">Link to Case</h3>
            <button onclick="hideLinkCaseModal()" class="text-gray-400 hover:text-white">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>
        </div>

        <form action="/record/<%= record.id %>/link-case" method="POST" class="space-y-6">
            <div class="relative">
                <input type="text" 
                       id="caseNumberInput"
                       name="caseNumber" 
                       placeholder="Enter case number"
                       autocomplete="off"
                       class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100"
                       required>
                
                <div id="caseSuggestions" 
                     class="absolute z-50 w-full mt-1 bg-space-dark/95 border border-blue-400/30 rounded-md shadow-lg hidden max-h-60 overflow-y-auto">
                </div>
            </div>

            <div>
                <label class="block text-gray-400 mb-2">Role in Case</label>
                <select name="role" id="roleSelect"
                        class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100"
                        required>
                    <option value="" disabled selected>Select role</option>
                    <option value="accused">Accused</option>
                    <option value="victim">Victim</option>
                    <option value="witness">Witness</option>
                    <option value="complainant">Complainant</option>
                </select>
            </div>

            <div>
                <label class="block text-gray-400 mb-2">Case Details</label>
                <textarea name="details"
                          class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100 h-24"
                          placeholder="Enter additional details about the person's involvement in the case"></textarea>
            </div>

            <div>
                <label class="block text-gray-400 mb-2">Articles/Sections</label>
                <div class="space-y-2" id="articlesContainer">
                    <div class="flex space-x-2">
                        <input type="text" name="articles[]"
                               class="flex-1 bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100"
                               placeholder="Enter article/section">
                        <button type="button" onclick="addArticleField()"
                                class="bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 px-3 py-2 rounded-md">
                            +
                        </button>
                    </div>
                </div>
            </div>
                 

            <!-- Court Details -->
            <div class="space-y-4">
                <h4 class="text-lg font-nasa text-blue-400">Court Details</h4>
                <div>
                    <label class="block text-gray-400 mb-2">Court Name</label>
                    <input type="text" name="courtName"
                           class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100"
                           placeholder="Enter court name">
                </div>
                
                <div>
                    <label class="block text-gray-400 mb-2">Court Case Number</label>
                    <input type="text" name="courtCaseNumber"
                           class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100"
                           placeholder="Enter court case number">
                </div>
                
                <div>
                    <label class="block text-gray-400 mb-2">Next Hearing Date</label>
                    <input type="date" name="nextHearingDate"
                           class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100">
                </div>
                
                <div>
                    <label class="block text-gray-400 mb-2">Judge Name</label>
                    <input type="text" name="judgeName"
                           class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100"
                           placeholder="Enter judge's name">
                </div>
                
                <div>
                    <label class="block text-gray-400 mb-2">Court Status</label>
                    <select name="courtStatus"
                            class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100">
                        <option value="" disabled selected>Select status</option>
                        <option value="pending">Pending</option>
                        <option value="ongoing">Ongoing</option>
                        <option value="completed">Completed</option>
                        <option value="appealed">Appealed</option>
                    </select>
                </div>
            </div>

            <div class="flex justify-end space-x-4">
                <button type="button"
                        onclick="hideLinkCaseModal()"
                        class="bg-red-500/20 hover:bg-red-500/30 text-red-400 font-nasa px-4 py-2 rounded-md transition-all">
                    Cancel
                </button>
                <button type="submit"
                        class="bg-green-500/20 hover:bg-green-500/30 text-green-400 font-nasa px-4 py-2 rounded-md transition-all">
                    Link Case
                </button>
            </div>
        </form>
    </div>
</div>



<script>
function showLinkCaseModal() {
    const modal = document.getElementById('linkCaseModal');
    modal.classList.remove('hidden');
    modal.classList.add('flex');
}

function hideLinkCaseModal() {
    const modal = document.getElementById('linkCaseModal');
    modal.classList.add('hidden');
    modal.classList.remove('flex');
}

// Close modal when clicking outside
document.getElementById('linkCaseModal').addEventListener('click', function(e) {
    if (e.target === this) {
        hideLinkCaseModal();
    }
});

async function unlinkCase(profileId, caseId) {
    if (!confirm('Are you sure you want to unlink this case?')) return;

    try {
        const response = await fetch(`/record/${profileId}/unlink-case/${caseId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        const data = await response.json();

        if (response.ok) {
            // Show success message
            showNotification('Case unlinked successfully', 'success');
            // Reload the page to reflect changes
            window.location.reload();
        } else {
            showNotification(data.error || 'Failed to unlink case', 'error');
        }
    } catch (error) {
        console.error('Error unlinking case:', error);
        showNotification('Failed to unlink case', 'error');
    }
}

// Add notification function if not already present
function showNotification(message, type = 'success') {
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 p-4 rounded-lg shadow-lg z-50 ${
        type === 'success' ? 'bg-green-500/20 text-green-400' : 'bg-red-500/20 text-red-400'
    }`;
    notification.textContent = message;

    document.body.appendChild(notification);

    setTimeout(() => {
        notification.remove();
    }, 3000);
}

// Update the form submission handler
document.querySelector('form[action*="/link-case"]').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const profileId = '<%= record.id %>';

    // Collect articles
    const articles = Array.from(formData.getAll('articles[]'))
        .filter(article => article.trim() !== '')
        .map(article => ({ section: article }));

    // Build arrest details object
    const arrestDetails = formData.get('isArrested') ? {
        isArrested: true,
        arrestDate: formData.get('arrestDate'),
        arrestLocation: {
            english: formData.get('arrestLocation'),
            hindi: ''  // You might want to add Hindi transliteration here
        },
        arrestingOfficer: formData.get('arrestingOfficer')
    } : null;

    // Build court details object
    const courtDetails = {
        courtName: formData.get('courtName'),
        caseNumber: formData.get('courtCaseNumber'),
        nextHearingDate: formData.get('nextHearingDate'),
        judgeName: formData.get('judgeName'),
        status: formData.get('courtStatus')
    };

    try {
        const response = await fetch(`/record/${profileId}/link-case`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                caseNumber: formData.get('caseNumber'),
                role: formData.get('role'),
                details: formData.get('details'),
                articles: articles,
                arrestDetails: arrestDetails,
                courtDetails: courtDetails
            })
        });

        const data = await response.json();

        if (response.ok) {
            showNotification('Case linked successfully', 'success');
            window.location.reload();
        } else {
            showNotification(data.error || 'Failed to link case', 'error');
        }
    } catch (error) {
        console.error('Error:', error);
        showNotification('Failed to link case', 'error');
    }
});

// Add case suggestion functionality
document.getElementById('caseNumberInput').addEventListener('input', async function(e) {
    const input = e.target.value;
    const suggestionsContainer = document.getElementById('caseSuggestions');
    
    if (!input) {
        suggestionsContainer.classList.add('hidden');
        return;
    }

    try {
        const response = await fetch(`/api/cases/search?q=${encodeURIComponent(input)}`);
        const data = await response.json();

        if (data.cases && data.cases.length > 0) {
            suggestionsContainer.innerHTML = data.cases.map(case_ => `
                <div class="p-3 hover:bg-blue-400/10 cursor-pointer" 
                     onclick="selectCase(${case_.caseNumber})">
                    <div class="flex justify-between items-start">
                        <div>
                            <div class="text-white font-nasa">#${case_.caseNumber}</div>
                            <div class="text-sm text-gray-400">${case_.caseType} Case</div>
                            <div class="text-xs text-gray-500 mt-1">
                                ${case_.location?.district?.english || ''}, 
                                ${case_.location?.state?.english || ''}
                            </div>
                        </div>
                        <span class="text-sm px-2 py-1 rounded-full ${
                            case_.status === 'active' ? 'bg-green-500/20 text-green-400' :
                            case_.status === 'pending' ? 'bg-yellow-500/20 text-yellow-400' :
                            'bg-red-500/20 text-red-400'
                        }">
                            ${case_.status.charAt(0).toUpperCase() + case_.status.slice(1)}
                        </span>
                    </div>
                    <div class="text-sm text-gray-400 mt-2 truncate">
                        ${case_.description?.english || ''}
                    </div>
                </div>
            `).join('');
            suggestionsContainer.classList.remove('hidden');
        } else {
            suggestionsContainer.innerHTML = `
                <div class="p-3 text-gray-400">No cases found</div>
            `;
            suggestionsContainer.classList.remove('hidden');
        }
    } catch (error) {
        console.error('Error fetching suggestions:', error);
    }
});

function selectCase(caseNumber) {
    document.getElementById('caseNumberInput').value = caseNumber;
    document.getElementById('caseSuggestions').classList.add('hidden');
}

// Add these new functions for the enhanced form
function addArticleField() {
    const container = document.getElementById('articlesContainer');
    const newField = document.createElement('div');
    newField.className = 'flex space-x-2';
    newField.innerHTML = `
        <input type="text" name="articles[]"
               class="flex-1 bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100"
               placeholder="Enter article/section">
        <button type="button" onclick="this.parentElement.remove()"
                class="bg-red-500/20 hover:bg-red-500/30 text-red-400 px-3 py-2 rounded-md">
            -
        </button>
    `;
    container.appendChild(newField);
}

// Show/hide arrest details based on role
document.getElementById('roleSelect').addEventListener('change', function(e) {
    const arrestDetailsSection = document.getElementById('arrestDetailsSection');
    if (e.target.value === 'accused') {
        arrestDetailsSection.classList.remove('hidden');
    } else {
        arrestDetailsSection.classList.add('hidden');
    }
});

// Show/hide arrest fields based on checkbox
document.getElementById('isArrested').addEventListener('change', function(e) {
    const arrestFields = document.getElementById('arrestFields');
    if (e.target.checked) {
        arrestFields.classList.remove('hidden');
    } else {
        arrestFields.classList.add('hidden');
    }
});

let selectedProfileId = null;
const searchInput = document.getElementById('searchInput');
const searchResults = document.getElementById('searchResults');
const linkProfileForm = document.getElementById('linkProfileForm');
const roleSelect = document.getElementById('roleSelect');
const dateOfBirth = document.getElementById('dateOfBirth');
const caseDescription = document.getElementById('caseDescription');
const mobileNumber = document.getElementById('mobileNumber');

// Debounce function
function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

// Search profiles function
const searchProfiles = debounce(async (query) => {
    if (!query) {
        searchResults.innerHTML = '';
        return;
    }

    try {
        const response = await fetch(`/api/profiles/search?q=${encodeURIComponent(query)}`);
        const data = await response.json();

        searchResults.innerHTML = '';
        data.profiles.forEach(profile => {
            const div = document.createElement('div');
            div.className = 'list-group-item list-group-item-action';
            div.innerHTML = `
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <div>ID: ${profile.id}</div>
                        <div>Name (English): ${profile.firstNameEnglish} ${profile.middleNameEnglish || ''} ${profile.lastNameEnglish}</div>
                        <div>नाम (हिंदी): ${profile.firstNameHindi} ${profile.middleNameHindi || ''} ${profile.lastNameHindi}</div>
                    </div>
                </div>
            `;
            div.addEventListener('click', () => {
                selectedProfileId = profile.id;
                searchResults.querySelectorAll('.list-group-item').forEach(item => {
                    item.classList.remove('active');
                });
                div.classList.add('active');
            });
            searchResults.appendChild(div);
        });
    } catch (error) {
        console.error('Search error:', error);
    }
}, 300);

// Add event listener for search input
searchInput.addEventListener('input', (e) => {
    searchProfiles(e.target.value);
});

// Add form validation and styling for empty fields
const addValidationStyles = (element) => {
    element.classList.add('is-invalid');
    element.addEventListener('input', () => {
        if (element.value.trim()) {
            element.classList.remove('is-invalid');
        } else {
            element.classList.add('is-invalid');
        }
    });
};

// Form submission handler
linkProfileForm.addEventListener('submit', async (e) => {
    e.preventDefault();

    if (!selectedProfileId) {
        alert('Please select a profile first');
        return;
    }

    // Validate required fields
    let isValid = true;
    [roleSelect, dateOfBirth, caseDescription, mobileNumber].forEach(element => {
        if (!element.value.trim()) {
            addValidationStyles(element);
            isValid = false;
        }
    });

    // Validate mobile number format
    if (!mobileNumber.value.match(/^[0-9]{10}$/)) {
        mobileNumber.classList.add('is-invalid');
        isValid = false;
    }

    if (!isValid) return;

    try {
        const response = await fetch(`/records/<%= record.id %>/link-profile`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                profileId: selectedProfileId,
                role: roleSelect.value,
                dateOfBirth: dateOfBirth.value,
                caseDescription: caseDescription.value,
                mobileNumber: mobileNumber.value
            })
        });

        if (response.ok) {
            window.location.reload();
        } else {
            const data = await response.json();
            alert(data.error || 'Failed to link the profile');
        }
    } catch (error) {
        console.error('Error:', error);
        alert('Failed to link the profile');
    }
});
</script> 