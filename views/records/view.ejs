<% layout('./layout/boilerplate') -%>

<div class="pt-20">
    <div class="glass-effect rounded-lg p-8 max-w-4xl mx-auto">
        <!-- Header with Actions -->
        <div class="flex justify-between items-start mb-8">
            <h1 class="text-3xl font-nasa text-blue-400">Profile #<%= record.id %></h1>
            <div class="flex space-x-4">
                <a href="/record/<%= record.id %>/edit" 
                   class="bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 font-nasa px-4 py-2 rounded-md transition-all">
                    Edit Record
                </a>
                <form action="/record/<%= record.id %>?_method=DELETE" method="POST" class="inline">
                    <button type="submit" 
                            class="bg-red-500/20 hover:bg-red-500/30 text-red-400 font-nasa px-4 py-2 rounded-md transition-all"
                            onclick="return confirm('Are you sure you want to delete this record?')">
                        Delete Record
                    </button>
                </form>
            </div>
        </div>

        <!-- Status Badge -->
        <div class="mb-8">
            <span class="px-3 py-1 rounded-full text-sm font-nasa
                <%= record.status === 'active' ? 'bg-green-500/20 text-green-400' : 
                   record.status === 'pending' ? 'bg-yellow-500/20 text-yellow-400' : 
                   'bg-red-500/20 text-red-400' %>">
                <%= record.status.charAt(0).toUpperCase() + record.status.slice(1) %>
            </span>
        </div>

        <!-- Personal Information -->
        <div class="space-y-6 mb-8">
            <h2 class="text-xl font-nasa text-blue-400/80">Personal Information</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div class="space-y-2">
                    <p class="text-gray-400">Name:</p>
                    <p class="text-white">
                        <%= record.firstNameEnglish %> <%= record.lastNameEnglish %>
                        <span class="text-sm text-gray-500">
                            (<%= record.firstNameHindi %> <%= record.lastNameHindi %>)
                        </span>
                    </p>
                </div>
                <div class="space-y-2">
                    <p class="text-gray-400">Occupation:</p>
                    <p class="text-white">
                        <%= record.occupationEnglish %>
                        <span class="text-sm text-gray-500">(<%= record.occupationHindi %>)</span>
                    </p>
                </div>
                <div class="space-y-2">
                    <p class="text-gray-400">Date of Birth:</p>
                    <p class="text-white"><%= new Date(record.dob).toLocaleDateString() %></p>
                </div>
                <div class="space-y-2">
                    <p class="text-gray-400">Gender:</p>
                    <p class="text-white"><%= record.gender %></p>
                </div>
                <div class="space-y-2">
                    <p class="text-gray-400">Mobile Number:</p>
                    <p class="text-white"><%= record.mNumber %></p>
                </div>
            </div>
        </div>

        <!-- Appearance Details -->
        <div class="space-y-6 mb-8">
            <h2 class="text-xl font-nasa text-blue-400/80">Appearance Details</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <!-- Physical Measurements -->
                <div class="space-y-4">
                    <h3 class="text-lg font-nasa text-blue-400/60">Physical Characteristics</h3>
                    <div class="grid grid-cols-2 gap-4">
                        <div class="space-y-2">
                            <p class="text-gray-400">Height:</p>
                            <p class="text-white"><%= record.appearance.height %> cm</p>
                        </div>
                        <div class="space-y-2">
                            <p class="text-gray-400">Weight:</p>
                            <p class="text-white"><%= record.appearance.weight %> kg</p>
                        </div>
                    </div>
                    <div class="space-y-2">
                        <p class="text-gray-400">Complexion:</p>
                        <p class="text-white"><%= record.appearance.complexion %></p>
                    </div>
                    <div class="space-y-2">
                        <p class="text-gray-400">Build:</p>
                        <p class="text-white"><%= record.appearance.build %></p>
                    </div>
                </div>

                <!-- Distinguishing Features -->
                <div class="space-y-4">
                    <h3 class="text-lg font-nasa text-blue-400/60">Distinguishing Features</h3>
                    <div class="space-y-4">
                        <div class="space-y-2">
                            <p class="text-gray-400">Facial Features:</p>
                            <p class="text-white">
                                <%= record.appearance.facialFeatures.english %>
                                <span class="text-sm text-gray-500">(<%= record.appearance.facialFeatures.hindi %>)</span>
                            </p>
                        </div>
                        <div class="space-y-2">
                            <p class="text-gray-400">Scars/Marks:</p>
                            <p class="text-white">
                                <%= record.appearance.scars.english %>
                                <span class="text-sm text-gray-500">(<%= record.appearance.scars.hindi %>)</span>
                            </p>
                        </div>
                        <div class="space-y-2">
                            <p class="text-gray-400">Tattoos:</p>
                            <p class="text-white">
                                <%= record.appearance.tattoos.english %>
                                <span class="text-sm text-gray-500">(<%= record.appearance.tattoos.hindi %>)</span>
                            </p>
                        </div>
                        <div class="space-y-2">
                            <p class="text-gray-400">Other Features:</p>
                            <p class="text-white">
                                <%= record.appearance.otherFeatures.english %>
                                <span class="text-sm text-gray-500">(<%= record.appearance.otherFeatures.hindi %>)</span>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Address Information -->
        <div class="space-y-6 mb-8">
            <h2 class="text-xl font-nasa text-blue-400/80">Address Information</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div class="space-y-2">
                    <p class="text-gray-400">Location:</p>
                    <p class="text-white">
                        <%= record.address.locationEnglish %>
                        <span class="text-sm text-gray-500">(<%= record.address.locationHindi %>)</span>
                    </p>
                </div>
                <div class="space-y-2">
                    <p class="text-gray-400">City:</p>
                    <p class="text-white">
                        <%= record.address.cityEnglish %>
                        <span class="text-sm text-gray-500">(<%= record.address.cityHindi %>)</span>
                    </p>
                </div>
                <div class="space-y-2">
                    <p class="text-gray-400">District:</p>
                    <p class="text-white">
                        <%= record.address.districtEnglish %>
                        <span class="text-sm text-gray-500">(<%= record.address.districtHindi %>)</span>
                    </p>
                </div>
                <div class="space-y-2">
                    <p class="text-gray-400">State:</p>
                    <p class="text-white">
                        <%= record.address.stateEnglish %>
                        <span class="text-sm text-gray-500">(<%= record.address.stateHindi %>)</span>
                    </p>
                </div>
            </div>
        </div>

        <!-- Case Details Section -->
        <% if (record.caseDetails && record.caseDetails.length > 0) { %>
            <div class="space-y-6 mb-8">
                <h2 class="text-xl font-nasa text-blue-400/80">Case Details</h2>
                <div class="space-y-4">
                    <% record.caseDetails.forEach(caseDetail => { %>
                        <div class="glass-effect p-4 rounded-lg">
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div class="space-y-2">
                                    <p class="text-gray-400">Case Number:</p>
                                    <p class="text-white"><%= caseDetail.caseNumber %></p>
                                </div>
                                <div class="space-y-2">
                                    <p class="text-gray-400">Section:</p>
                                    <p class="text-white"><%= caseDetail.section %></p>
                                </div>
                                <div class="space-y-2">
                                    <p class="text-gray-400">Role:</p>
                                    <p class="text-white"><%= caseDetail.role %></p>
                                </div>
                            </div>
                            <div class="mt-4">
                                <p class="text-gray-400">Details:</p>
                                <p class="text-white"><%= caseDetail.details.english %></p>
                                <p class="text-sm text-gray-500"><%= caseDetail.details.hindi %></p>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        <% } %>

        <!-- Family Details Section -->
        <% if (record.familyDetails && record.familyDetails.length > 0) { %>
            <div class="space-y-6">
                <h2 class="text-xl font-nasa text-blue-400/80">Family Details</h2>
                <div class="space-y-4">
                    <% record.familyDetails.forEach(member => { %>
                        <div class="glass-effect p-4 rounded-lg">
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                                <div class="space-y-2">
                                    <p class="text-gray-400">Name:</p>
                                    <p class="text-white">
                                        <%= member.name.english %>
                                        <span class="text-sm text-gray-500">(<%= member.name.hindi %>)</span>
                                    </p>
                                </div>
                                <div class="space-y-2">
                                    <p class="text-gray-400">Relation:</p>
                                    <p class="text-white">
                                        <%= member.relation.english %>
                                        <span class="text-sm text-gray-500">(<%= member.relation.hindi %>)</span>
                                    </p>
                                </div>
                                <div class="space-y-2">
                                    <p class="text-gray-400">Contact:</p>
                                    <p class="text-white"><%= member.contact %></p>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        <% } %>

        <!-- Add this section where you want to show connected cases -->
        <div class="space-y-6 mb-8">
            <div class="flex justify-between items-center">
                <h2 class="text-xl font-nasa text-blue-400/80">Connected Cases</h2>
                <button onclick="showCaseLinkModal()" 
                        class="bg-green-500/20 hover:bg-green-500/30 text-green-400 font-nasa px-4 py-2 rounded-md transition-all">
                    + Link Case
                </button>
            </div>
            
            <div id="connectedCases" class="space-y-4">
                <% if (record.cases && record.cases.length > 0) { %>
                    <% record.cases.forEach(caseLink => { %>
                        <div class="glass-effect p-4 rounded-lg flex justify-between items-center">
                            <div>
                                <p class="text-white">Case #<%= caseLink.case.caseNumber %></p>
                                <p class="text-sm text-gray-400">Role: <%= caseLink.role %></p>
                            </div>
                            <div class="flex items-center space-x-2">
                                <a href="/cases/<%= caseLink.case._id %>" 
                                   class="bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 px-3 py-1 rounded-md transition-all">
                                    View Case
                                </a>
                                <button onclick="unlinkCase('<%= caseLink.case._id %>')"
                                        class="bg-red-500/20 hover:bg-red-500/30 text-red-400 px-3 py-1 rounded-md transition-all">
                                    Unlink
                                </button>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <div class="text-gray-400 text-center py-4">
                        No cases linked to this profile
                    </div>
                <% } %>
            </div>
        </div>

        <!-- Case Link Modal -->
        <div id="caseLinkModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
            <div class="flex items-center justify-center min-h-screen px-4">
                <div class="glass-effect rounded-lg p-8 max-w-2xl w-full">
                    <div class="flex justify-between items-center mb-6">
                        <h3 class="text-xl font-nasa text-blue-400">Link Case to Profile</h3>
                        <button onclick="hideCaseLinkModal()" class="text-gray-400 hover:text-gray-200">
                            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                        </button>
                    </div>

                    <div class="mb-6">
                        <input type="text" 
                               id="caseSearch" 
                               placeholder="Search by case number..."
                               class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100">
                    </div>

                    <div id="caseSearchResults" class="max-h-60 overflow-y-auto space-y-2">
                        <!-- Search results will appear here -->
                    </div>
                </div>
            </div>
        </div>

        <script>
        // Add these functions to handle case linking
        function showCaseLinkModal() {
            document.getElementById('caseLinkModal').classList.remove('hidden');
        }

        function hideCaseLinkModal() {
            document.getElementById('caseLinkModal').classList.add('hidden');
        }

        // Update the displayResults function
        function displayResults(results) {
            const resultsDiv = document.getElementById('caseSearchResults');
            
            console.log('Displaying results:', results); // Debug log

            if (!results.cases || results.cases.length === 0) {
                resultsDiv.innerHTML = `
                    <div class="text-center text-gray-400 py-8">
                        <p>No cases found matching your search criteria</p>
                    </div>
                `;
                return;
            }

            resultsDiv.innerHTML = results.cases.map(case_ => `
                <div class="glass-effect p-4 rounded-lg flex justify-between items-center mb-2">
                    <div>
                        <p class="text-white font-medium">Case #${case_.caseNumber || 'N/A'}</p>
                        <p class="text-sm text-gray-400">${case_.caseType || 'N/A'} - ${case_.status || 'N/A'}</p>
                        <p class="text-sm text-gray-400">${case_.location?.district?.english || 'Location not specified'}</p>
                    </div>
                    <div class="flex items-center space-x-2">
                        <select id="role-${case_._id}" 
                                class="bg-space-dark/50 border border-blue-400/30 rounded-md px-3 py-1 text-gray-100 text-sm">
                            <option value="accused">Accused</option>
                            <option value="victim">Victim</option>
                            <option value="witness">Witness</option>
                            <option value="complainant">Complainant</option>
                        </select>
                        <button onclick="linkCase('${case_._id}')"
                                id="link-button-${case_._id}"
                                class="bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 px-3 py-1 rounded-md transition-all">
                            Link
                        </button>
                    </div>
                </div>
            `).join('');
        }

        // Update the case search functionality
        document.getElementById('caseSearch').addEventListener('input', async function(e) {
            const searchTerm = e.target.value.trim();
            const resultsDiv = document.getElementById('caseSearchResults');
            
            if (searchTerm.length < 1) {
                resultsDiv.innerHTML = '';
                return;
            }

            try {
                console.log('Searching for:', searchTerm);
                const response = await fetch(`/api/cases/search?q=${encodeURIComponent(searchTerm)}`);
                if (!response.ok) throw new Error('Search failed');
                
                const data = await response.json();
                console.log('Search response:', data);

                displayResults(data);
            } catch (error) {
                console.error('Search error:', error);
                resultsDiv.innerHTML = `
                    <div class="text-center text-red-400 py-8">
                        <p>Error searching cases: ${error.message}</p>
                    </div>
                `;
            }
        });

        async function linkCase(caseId) {
            try {
                const role = document.getElementById(`role-${caseId}`).value;
                const profileId = '<%= record._id %>';

                console.log('Attempting to link case:', { caseId, profileId, role });

                // Show loading state
                const button = document.getElementById(`link-button-${caseId}`);
                if (button) {
                    button.textContent = 'Linking...';
                    button.disabled = true;
                }

                // First check if the case exists
                const checkResponse = await fetch(`/api/cases/${caseId}`, {
                    headers: {
                        'Accept': 'application/json'
                    }
                });

                if (!checkResponse.ok) {
                    const checkData = await checkResponse.json();
                    throw new Error(checkData.error || 'Case not found');
                }

                // Proceed with linking
                const response = await fetch(`/api/profiles/${profileId}/cases`, {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ caseId, role })
                });

                const data = await response.json();
                console.log('Link response:', data);

                if (!response.ok) {
                    throw new Error(data.error || 'Failed to link case');
                }

                showNotification('Case linked successfully', 'success');
                
                // Hide modal and refresh after delay
                if (typeof hideCaseLinkModal === 'function') {
                    hideCaseLinkModal();
                }
                setTimeout(() => window.location.reload(), 1000);

            } catch (error) {
                console.error('Error linking case:', error);
                showNotification(error.message || 'Failed to link case', 'error');
            } finally {
                // Reset button state
                const button = document.getElementById(`link-button-${caseId}`);
                if (button) {
                    button.textContent = 'Link';
                    button.disabled = false;
                }
            }
        }

        async function unlinkCase(caseId) {
            if (!confirm('Are you sure you want to unlink this case?')) return;

            const profileId = '<%= record._id %>';

            try {
                const response = await fetch(`/api/profiles/${profileId}/cases/${caseId}`, {
                    method: 'DELETE'
                });

                if (!response.ok) throw new Error('Failed to unlink case');

                // Refresh the page to show updated links
                window.location.reload();
            } catch (error) {
                console.error('Error unlinking case:', error);
                showNotification('Failed to unlink case', 'error');
            }
        }

        // Add this notification function if not already present
        function showNotification(message, type = 'success') {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 p-4 rounded-lg shadow-lg z-50 ${
                type === 'success' ? 'bg-green-500/20 text-green-400' : 'bg-red-500/20 text-red-400'
            }`;
            notification.textContent = message;

            document.body.appendChild(notification);

            // Remove notification after 3 seconds
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }
        </script>
    </div>
</div> 