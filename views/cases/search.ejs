<%- include('../partials/header') %>

<div class="flex flex-col min-h-screen">
    <main class="flex-grow pt-20 px-4 overflow-y-auto">
        <div class="glass-effect rounded-lg p-8 max-w-7xl mx-auto mb-16">
            <!-- Search Form -->
            <div class="mb-8">
                <h1 class="text-3xl font-nasa text-blue-400 mb-6">Search Cases</h1>
                <form id="searchForm" class="space-y-6">
                    <!-- Basic Search -->
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                        <div class="relative">
                            <input type="text" 
                                   id="caseNumberInput"
                                   name="query" 
                                   placeholder="Search by case number / केस नंबर से खोजें"
                                   autocomplete="off"
                                   class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100">
                            <!-- Suggestions Dropdown -->
                            <div id="caseNumberSuggestions" 
                                 class="absolute z-[1000] w-full mt-1 bg-space-dark border border-blue-400/30 rounded-md shadow-lg hidden overflow-visible">
                            </div>
                        </div>
                        
                        <select name="caseType"
                                class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100">
                            <option value="">All Case Types / सभी केस प्रकार</option>
                            <option value="criminal">Criminal Case / आपराधिक मामला</option>
                            <option value="civil">Civil Case / दीवानी मामला</option>
                            <option value="domestic">Domestic Violence / घरेलू हिंसा</option>
                            <option value="cybercrime">Cybercrime / साइबर अपराध</option>
                            <option value="other">Other / अन्य</option>
                        </select>

                        <select name="status"
                                class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100">
                            <option value="">All Statuses / सभी स्थितियां</option>
                            <option value="active">Active / सक्रिय</option>
                            <option value="closed">Closed / बंद</option>
                            <option value="pending">Pending / लंबित</option>
                        </select>
                    </div>

                    <!-- Advanced Search -->
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                        <div>
                            <label class="block text-gray-400 mb-2">Date Range / तिथि सीमा</label>
                            <div class="grid grid-cols-2 gap-2">
                                <div class="relative">
                                    <input type="date" 
                                           name="dateFrom"
                                           class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100 [&::-webkit-calendar-picker-indicator]:opacity-0"
                                           onclick="this.nextElementSibling.click()">
                                    <input type="button"
                                           class="absolute right-3 top-1/2 -translate-y-1/2 cursor-pointer"
                                           onclick="this.previousElementSibling.showPicker()"
                                           style="border:none; background:transparent;">
                                    <svg class="w-5 h-5 text-gray-400 absolute right-3 top-1/2 -translate-y-1/2 pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                    </svg>
                                </div>
                                <div class="relative">
                                    <input type="date" 
                                           name="dateTo"
                                           class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100 [&::-webkit-calendar-picker-indicator]:opacity-0"
                                           onclick="this.nextElementSibling.click()">
                                    <input type="button"
                                           class="absolute right-3 top-1/2 -translate-y-1/2 cursor-pointer"
                                           onclick="this.previousElementSibling.showPicker()"
                                           style="border:none; background:transparent;">
                                    <svg class="w-5 h-5 text-gray-400 absolute right-3 top-1/2 -translate-y-1/2 pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                    </svg>
                                </div>
                            </div>
                        </div>

                        <select name="priority"
                                class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100">
                            <option value="">All Priorities / सभी प्राथमिकताएं</option>
                            <option value="low">Low / कम</option>
                            <option value="medium">Medium / मध्यम</option>
                            <option value="high">High / उच्च</option>
                            <option value="urgent">Urgent / अत्यावश्यक</option>
                        </select>

                        <input type="text" 
                               name="district" 
                               placeholder="Search by district / जिले से खोजें"
                               class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100">
                    </div>

                    <!-- Search Button -->
                    <div class="flex justify-center">
                        <button type="submit"
                                class="bg-blue-500 hover:bg-blue-600 text-white font-nasa px-8 py-3 rounded-md transition-all transform hover:scale-105 hover:shadow-lg hover:shadow-blue-500/20">
                            Search Cases / केस खोजें
                        </button>
                    </div>
                </form>
            </div>

            <!-- Results Section -->
            <div id="searchResults" class="space-y-4">
                <!-- Results will be dynamically added here -->
            </div>
        </div>
    </main>
    
    <%- include('../partials/footer') %>
</div>

<script>
// Handle case number suggestions
const caseNumberInput = document.getElementById('caseNumberInput');
const suggestionsDiv = document.getElementById('caseNumberSuggestions');
let selectedSuggestionIndex = -1;

caseNumberInput.addEventListener('input', async function() {
    const query = this.value.trim();
    if (query.length < 2) {
        suggestionsDiv.innerHTML = '';
        suggestionsDiv.classList.add('hidden');
        return;
    }

    try {
        const response = await fetch(`/api/suggestions?type=caseNumber&query=${encodeURIComponent(query)}`);
        if (!response.ok) throw new Error('Failed to fetch suggestions');
        
        const suggestions = await response.json();
        
        if (suggestions.length === 0) {
            suggestionsDiv.classList.add('hidden');
            return;
        }

        suggestionsDiv.innerHTML = suggestions.map((case_, index) => `
            <div class="suggestion-item p-3 hover:bg-blue-400/10 cursor-pointer ${index === selectedSuggestionIndex ? 'bg-blue-400/10' : ''}"
                 data-case-number="${case_.caseNumber}">
                <div class="font-nasa text-blue-400">${case_.caseNumber}</div>
                <div class="text-sm text-gray-400">${case_.description}</div>
                <div class="text-xs text-gray-500">${case_.location}</div>
            </div>
        `).join('');

        suggestionsDiv.classList.remove('hidden');

        // Add click handlers to suggestions
        document.querySelectorAll('.suggestion-item').forEach(item => {
            item.addEventListener('click', function() {
                caseNumberInput.value = this.dataset.caseNumber;
                suggestionsDiv.classList.add('hidden');
            });
        });
    } catch (error) {
        console.error('Error fetching suggestions:', error);
    }
});

// Handle keyboard navigation
caseNumberInput.addEventListener('keydown', function(e) {
    const suggestions = document.querySelectorAll('.suggestion-item');
    
    if (e.key === 'ArrowDown') {
        e.preventDefault();
        selectedSuggestionIndex = Math.min(selectedSuggestionIndex + 1, suggestions.length - 1);
        updateSelectedSuggestion(suggestions);
    } else if (e.key === 'ArrowUp') {
        e.preventDefault();
        selectedSuggestionIndex = Math.max(selectedSuggestionIndex - 1, -1);
        updateSelectedSuggestion(suggestions);
    } else if (e.key === 'Enter' && selectedSuggestionIndex >= 0) {
        e.preventDefault();
        const selectedSuggestion = suggestions[selectedSuggestionIndex];
        if (selectedSuggestion) {
            caseNumberInput.value = selectedSuggestion.dataset.caseNumber;
            suggestionsDiv.classList.add('hidden');
        }
    }
});

function updateSelectedSuggestion(suggestions) {
    suggestions.forEach((suggestion, index) => {
        if (index === selectedSuggestionIndex) {
            suggestion.classList.add('bg-blue-400/10');
        } else {
            suggestion.classList.remove('bg-blue-400/10');
        }
    });
}

// Hide suggestions when clicking outside
document.addEventListener('click', function(e) {
    if (!caseNumberInput.contains(e.target) && !suggestionsDiv.contains(e.target)) {
        suggestionsDiv.classList.add('hidden');
    }
});

// Handle form submission
document.getElementById('searchForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const searchParams = new URLSearchParams();
    
    for (let [key, value] of formData.entries()) {
        if (value) searchParams.append(key, value);
    }

    try {
        const response = await fetch(`/cases/api/search?${searchParams.toString()}`);
        if (!response.ok) throw new Error('Search failed');
        
        const results = await response.json();
        displayResults(results);
    } catch (error) {
        console.error('Search error:', error);
        showNotification('Failed to perform search', 'error');
    }
});

function displayResults(results) {
    const resultsContainer = document.getElementById('searchResults');
    
    if (!results.cases || results.cases.length === 0) {
        resultsContainer.innerHTML = `
            <div class="text-center text-gray-400 py-8">
                No cases found matching your search criteria
            </div>
        `;
        return;
    }

    resultsContainer.innerHTML = results.cases.map(case_ => `
        <div class="glass-effect p-6 rounded-lg hover:bg-blue-400/5 transition-all">
            <div class="flex justify-between items-start">
                <div>
                    <h3 class="text-xl font-nasa text-blue-400">
                        Case #${case_.caseNumber}
                    </h3>
                    <p class="text-gray-400 mt-1">
                        ${case_.caseType.charAt(0).toUpperCase() + case_.caseType.slice(1)} Case
                    </p>
                </div>
                <span class="px-3 py-1 rounded-full text-sm font-nasa
                    ${case_.status === 'active' ? 'bg-green-500/20 text-green-400' : 
                    case_.status === 'pending' ? 'bg-yellow-500/20 text-yellow-400' : 
                    'bg-red-500/20 text-red-400'}">
                    ${case_.status.charAt(0).toUpperCase() + case_.status.slice(1)}
                </span>
            </div>
            
            <div class="mt-4 grid grid-cols-2 gap-4 text-sm">
                <div>
                    <p class="text-gray-400">Location</p>
                    <p class="text-white">${case_.location.city.english}, ${case_.location.district.english}</p>
                </div>
                <div>
                    <p class="text-gray-400">Date Filed</p>
                    <p class="text-white">${new Date(case_.createdAt).toLocaleDateString()}</p>
                </div>
            </div>

            <div class="mt-4 flex justify-end">
                <a href="/cases/${case_._id}" 
                   class="bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 font-nasa px-4 py-2 rounded-md transition-all">
                    View Details
                </a>
            </div>
        </div>
    `).join('');
}
</script> 