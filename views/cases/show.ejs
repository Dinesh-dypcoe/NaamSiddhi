<%- include('../partials/header') %>

<div class="pt-20">
    <div class="glass-effect rounded-lg p-8 max-w-7xl mx-auto">
        <div class="flex justify-between items-center mb-6">
            <h1 class="text-2xl font-nasa text-blue-400">Case Details: <%= caseData.caseNumber %></h1>
            <div class="space-x-4">
                <a href="/" class="bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 font-nasa px-4 py-2 rounded-md transition-all">Back to Dashboard</a>
                <% if (caseData.status === 'closed') { %>
                    <button onclick="updateCaseStatus('active')" class="bg-green-500/20 hover:bg-green-500/30 text-green-400 font-nasa px-4 py-2 rounded-md transition-all">Reopen Case</button>
                <% } else { %>
                    <button onclick="updateCaseStatus('closed')" class="bg-red-500/20 hover:bg-red-500/30 text-red-400 font-nasa px-4 py-2 rounded-md transition-all">Close Case</button>
                <% } %>
            </div>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <!-- Case Information -->
            <div class="lg:col-span-2">
                <!-- Status Badge -->
                <div class="mb-6">
                    <span class="px-3 py-1 rounded-full text-sm font-nasa
                        <%= caseData.status === 'active' ? 'bg-green-500/20 text-green-400' : 
                            caseData.status === 'pending' ? 'bg-yellow-500/20 text-yellow-400' : 
                            'bg-red-500/20 text-red-400' %>">
                        <%= caseData.status.charAt(0).toUpperCase() + caseData.status.slice(1) %>
                    </span>
                </div>

                <!-- Case Description -->
                <div class="glass-effect p-6 rounded-lg mb-6">
                    <h2 class="text-xl font-nasa text-blue-400 mb-4">Case Description</h2>
                    <p class="text-gray-300"><%= caseData.description.english %></p>
                    <p class="text-gray-400 mt-2"><%= caseData.description.hindi %></p>
                </div>

                <!-- Connected Profiles -->
                <div class="glass-effect p-6 rounded-lg mb-6">
                    <div class="flex justify-between items-center mb-4">
                        <h2 class="text-xl font-nasa text-blue-400">Connected Profiles</h2>
                        <button onclick="showProfileLinkModal()" 
                                class="bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 font-nasa px-4 py-2 rounded-md transition-all">
                            + Add Profile
                        </button>
                    </div>
                    <div class="divide-y divide-blue-400/20">
                        <% if (caseData.profiles && caseData.profiles.length > 0) { %>
                            <% caseData.profiles.forEach(profile => { %>
                                <div class="py-4">
                                    <div class="flex flex-col space-y-4">
                                        <div class="flex justify-between items-start">
                                            <div>
                                                <h3 class="font-medium text-white">
                                                    <%= profile.profile.firstNameEnglish %> <%= profile.profile.lastNameEnglish %>
                                                </h3>
                                                <p class="text-sm text-gray-400">Role: <%= profile.role %></p>
                                            </div>
                                            <div class="flex space-x-2">
                                                <a href="/record/<%= profile.profile._id %>" 
                                                   class="bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 px-3 py-1 rounded-md transition-all">
                                                    View Profile
                                                </a>
                                                <button onclick="unlinkProfile('<%= profile.profile._id %>')"
                                                        class="bg-red-500/20 hover:bg-red-500/30 text-red-400 px-3 py-1 rounded-md transition-all">
                                                    Unlink
                                                </button>
                                            </div>
                                        </div>

                                        <% if (profile.details) { %>
                                            <div class="bg-blue-400/10 rounded-lg p-3">
                                                <h4 class="text-sm font-medium text-blue-400 mb-1">Case Details</h4>
                                                <p class="text-sm text-gray-300"><%= profile.details %></p>
                                            </div>
                                        <% } %>

                                        <% if (profile.articles && profile.articles.length > 0) { %>
                                            <div class="bg-blue-400/10 rounded-lg p-3">
                                                <h4 class="text-sm font-medium text-blue-400 mb-2">Articles/Sections</h4>
                                                <div class="flex flex-wrap gap-2">
                                                    <% profile.articles.forEach(article => { %>
                                                        <span class="text-sm text-gray-300 bg-blue-400/20 px-2 py-1 rounded">
                                                            <%= article.section %>
                                                        </span>
                                                    <% }) %>
                                                </div>
                                            </div>
                                        <% } %>

                                        <% if (profile.role === 'accused' && profile.arrestDetails && profile.arrestDetails.isArrested) { %>
                                            <div class="bg-blue-400/10 rounded-lg p-3">
                                                <h4 class="text-sm font-medium text-blue-400 mb-2">Arrest Details</h4>
                                                <div class="grid grid-cols-2 gap-4 text-sm">
                                                    <div>
                                                        <p class="text-gray-400">Arrest Date</p>
                                                        <p class="text-gray-300">
                                                            <%= new Date(profile.arrestDetails.arrestDate).toLocaleDateString() %>
                                                        </p>
                                                    </div>
                                                    <div>
                                                        <p class="text-gray-400">Location</p>
                                                        <p class="text-gray-300">
                                                            <%= profile.arrestDetails.arrestLocation.english %>
                                                        </p>
                                                    </div>
                                                    <div>
                                                        <p class="text-gray-400">Arresting Officer</p>
                                                        <p class="text-gray-300">
                                                            <%= profile.arrestDetails.arrestingOfficer %>
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        <% } %>

                                        <% if (profile.courtDetails) { %>
                                            <div class="bg-blue-400/10 rounded-lg p-3">
                                                <h4 class="text-sm font-medium text-blue-400 mb-2">Court Details</h4>
                                                <div class="grid grid-cols-2 gap-4 text-sm">
                                                    <div>
                                                        <p class="text-gray-400">Court Name</p>
                                                        <p class="text-gray-300">
                                                            <%= profile.courtDetails.courtName || 'Not specified' %>
                                                        </p>
                                                    </div>
                                                    <div>
                                                        <p class="text-gray-400">Case Number</p>
                                                        <p class="text-gray-300">
                                                            <%= profile.courtDetails.caseNumber || 'Not specified' %>
                                                        </p>
                                                    </div>
                                                    <% if (profile.courtDetails.nextHearingDate) { %>
                                                        <div>
                                                            <p class="text-gray-400">Next Hearing</p>
                                                            <p class="text-gray-300">
                                                                <%= new Date(profile.courtDetails.nextHearingDate).toLocaleDateString() %>
                                                            </p>
                                                        </div>
                                                    <% } %>
                                                    <% if (profile.courtDetails.judgeName) { %>
                                                        <div>
                                                            <p class="text-gray-400">Judge</p>
                                                            <p class="text-gray-300">
                                                                <%= profile.courtDetails.judgeName %>
                                                            </p>
                                                        </div>
                                                    <% } %>
                                                    <div>
                                                        <p class="text-gray-400">Status</p>
                                                        <p class="text-gray-300 capitalize">
                                                            <%= profile.courtDetails.status %>
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        <% } %>
                                    </div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <p class="text-gray-400 py-4">No profiles connected to this case</p>
                        <% } %>
                    </div>
                </div>
            </div>

            <!-- Sidebar Information -->
            <div class="lg:col-span-1">
                <!-- Reporter Details -->
                <div class="glass-effect p-6 rounded-lg mb-6">
                    <h2 class="text-xl font-nasa text-blue-400 mb-4">Reporter Details</h2>
                    <div class="space-y-3">
                        <div>
                            <label class="block text-sm text-gray-400">Name</label>
                            <p class="text-white"><%= caseData.reporter.name.english %></p>
                            <p class="text-gray-400"><%= caseData.reporter.name.hindi %></p>
                        </div>
                        <div>
                            <label class="block text-sm text-gray-400">Contact</label>
                            <p class="text-white"><%= caseData.reporter.contact %></p>
                        </div>
                        <% if (caseData.reporter.email) { %>
                            <div>
                                <label class="block text-sm text-gray-400">Email</label>
                                <p class="text-white"><%= caseData.reporter.email %></p>
                            </div>
                        <% } %>
                    </div>
                </div>

                <!-- Location Details -->
                <div class="glass-effect p-6 rounded-lg mb-6">
                    <h2 class="text-xl font-nasa text-blue-400 mb-4">Incident Location</h2>
                    <div class="space-y-2">
                        <p class="text-white"><%= caseData.location.address.english %></p>
                        <p class="text-gray-400"><%= caseData.location.address.hindi %></p>
                        <p class="text-white"><%= caseData.location.city.english %></p>
                        <p class="text-white"><%= caseData.location.district.english %></p>
                        <p class="text-white"><%= caseData.location.state.english %></p>
                    </div>
                </div>

                <!-- Case Timeline -->
                <div class="glass-effect p-6 rounded-lg">
                    <h2 class="text-xl font-nasa text-blue-400 mb-4">Case Timeline</h2>
                    <div class="space-y-4">
                        <% caseData.timeline.forEach(entry => { %>
                            <div class="flex items-start space-x-3">
                                <div class="w-2 h-2 bg-blue-400 rounded-full mt-2"></div>
                                <div>
                                    <p class="text-sm text-gray-400">
                                        <%= new Date(entry.date).toLocaleDateString() %>
                                    </p>
                                    <p class="text-white"><%= entry.description.english %></p>
                                    <p class="text-gray-400 text-sm"><%= entry.description.hindi %></p>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<%- include('../partials/footer') %>

<!-- Add this modal for linking profiles -->
<div id="profileLinkModal" class="fixed inset-0 bg-black/50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="glass-effect rounded-lg p-6 max-w-2xl w-full">
            <div class="flex justify-between items-center mb-6">
                <h2 class="text-xl font-nasa text-blue-400">Link Profile</h2>
                <button onclick="hideProfileLinkModal()" class="text-gray-400 hover:text-white">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>

            <div class="mb-6">
                <input type="text" 
                       id="profileSearch" 
                       placeholder="Search profiles by name..."
                       class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400 transition-all text-gray-100">
            </div>

            <div id="profileSearchResults" class="max-h-60 overflow-y-auto space-y-2">
                <!-- Search results will appear here -->
            </div>
        </div>
    </div>
</div>

<!-- Add this script at the bottom of the file -->
<script>
function showProfileLinkModal() {
    document.getElementById('profileLinkModal').classList.remove('hidden');
}

function hideProfileLinkModal() {
    document.getElementById('profileLinkModal').classList.add('hidden');
}

// Profile search functionality
document.getElementById('profileSearch').addEventListener('input', async function(e) {
    const searchTerm = e.target.value.trim();
    const resultsDiv = document.getElementById('profileSearchResults');
    
    if (searchTerm.length < 2) {
        resultsDiv.innerHTML = '';
        return;
    }

    try {
        const response = await fetch(`/api/profiles/search?q=${encodeURIComponent(searchTerm)}`);
        if (!response.ok) throw new Error('Search failed');
        
        const data = await response.json();
        
        if (!data.profiles || data.profiles.length === 0) {
            resultsDiv.innerHTML = `
                <div class="text-center text-gray-400 py-4">
                    <p>No profiles found</p>
                </div>
            `;
            return;
        }

        resultsDiv.innerHTML = data.profiles.map(profile => `
            <div class="glass-effect p-4 rounded-lg flex flex-col space-y-4 mb-2">
                <div class="flex justify-between items-start">
                    <div>
                        <p class="text-white font-medium">${profile.firstNameEnglish} ${profile.lastNameEnglish}</p>
                        <p class="text-sm text-gray-400">ID: ${profile.id}</p>
                    </div>
                    <div class="flex space-x-2">
                        <button onclick="toggleAdditionalDetails('${profile._id}')"
                                id="toggle-details-${profile._id}"
                                class="bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 px-3 py-1 rounded-md transition-all">
                            Fill Details
                        </button>
                        <button onclick="validateAndLink('${profile._id}')"
                                id="link-button-${profile._id}"
                                class="bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 px-3 py-1 rounded-md transition-all">
                            Link
                        </button>
                    </div>
                </div>

                <!-- Basic Role Selection - Always Visible -->
                <div>
                    <label class="block text-sm text-gray-400 mb-1">Role <span class="text-red-400">*</span></label>
                    <select id="role-${profile._id}" 
                            required
                            class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-3 py-2 text-gray-100 text-sm">
                        <option value="">Select Role</option>
                        <option value="accused">Accused</option>
                        <option value="victim">Victim</option>
                        <option value="witness">Witness</option>
                        <option value="complainant">Complainant</option>
                    </select>
                </div>

                <!-- Additional Details Section - Hidden by Default -->
                <div id="additional-details-${profile._id}" class="hidden space-y-4">
                    <!-- Case Details -->
                    <div>
                        <label class="block text-sm text-gray-400 mb-1">Case Details <span class="text-red-400">*</span></label>
                        <textarea id="details-${profile._id}"
                                required
                                placeholder="Enter case details..."
                                class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-3 py-2 text-gray-100 text-sm h-20 resize-none"></textarea>
                    </div>

                    <!-- Articles/Sections -->
                    <div>
                        <label class="block text-sm text-gray-400 mb-1">Articles/Sections <span class="text-red-400">*</span></label>
                        <div class="flex space-x-2">
                            <input type="text" 
                                   id="article-${profile._id}"
                                   placeholder="e.g., IPC 302"
                                   class="flex-1 bg-space-dark/50 border border-blue-400/30 rounded-md px-3 py-2 text-gray-100 text-sm">
                            <button onclick="addArticle('${profile._id}')"
                                    class="bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 px-3 py-1 rounded-md">
                                Add
                            </button>
                        </div>
                        <div id="articles-list-${profile._id}" class="mt-2 space-y-1">
                            <!-- Articles will be added here -->
                        </div>
                        <p id="articles-error-${profile._id}" class="hidden text-red-400 text-sm mt-1">
                            At least one article/section is required
                        </p>
                    </div>

                    <!-- Arrest Details (Only shown for accused) -->
                    <div id="arrest-details-${profile._id}" class="hidden">
                        <label class="block text-sm text-gray-400 mb-1">Arrest Details <span class="text-red-400">*</span></label>
                        <div class="space-y-2">
                            <div class="flex items-center">
                                <input type="checkbox" 
                                       id="is-arrested-${profile._id}"
                                       class="mr-2">
                                <label class="text-sm text-gray-400">Is Arrested</label>
                            </div>
                            <div id="arrest-fields-${profile._id}" class="space-y-2">
                                <input type="date" 
                                       id="arrest-date-${profile._id}"
                                       class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-3 py-2 text-gray-100 text-sm"
                                       disabled
                                       required>
                                <input type="text"
                                       id="arrest-location-${profile._id}"
                                       placeholder="Arrest Location"
                                       class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-3 py-2 text-gray-100 text-sm"
                                       disabled
                                       required>
                                <input type="text"
                                       id="arresting-officer-${profile._id}"
                                       placeholder="Arresting Officer"
                                       class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-3 py-2 text-gray-100 text-sm"
                                       disabled
                                       required>
                            </div>
                        </div>
                    </div>

                    <!-- Court Details -->
                    <div>
                        <label class="block text-sm text-gray-400 mb-1">Court Details <span class="text-red-400">*</span></label>
                        <div class="space-y-2">
                            <input type="text"
                                   id="court-name-${profile._id}"
                                   placeholder="Court Name"
                                   required
                                   class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-3 py-2 text-gray-100 text-sm">
                            <input type="text"
                                   id="court-case-number-${profile._id}"
                                   placeholder="Court Case Number"
                                   required
                                   class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-3 py-2 text-gray-100 text-sm">
                            <input type="date"
                                   id="next-hearing-${profile._id}"
                                   required
                                   class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-3 py-2 text-gray-100 text-sm">
                            <input type="text"
                                   id="judge-name-${profile._id}"
                                   placeholder="Judge Name"
                                   required
                                   class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-3 py-2 text-gray-100 text-sm">
                            <select id="court-status-${profile._id}"
                                    required
                                    class="w-full bg-space-dark/50 border border-blue-400/30 rounded-md px-3 py-2 text-gray-100 text-sm">
                                <option value="">Select Status</option>
                                <option value="pending">Pending</option>
                                <option value="ongoing">Ongoing</option>
                                <option value="disposed">Disposed</option>
                                <option value="appealed">Appealed</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        `).join('');
    } catch (error) {
        console.error('Search error:', error);
        resultsDiv.innerHTML = `
            <div class="text-center text-red-400 py-4">
                <p>Error searching profiles: ${error.message}</p>
            </div>
        `;
    }
});

// Function to validate form fields
function validateFields(profileId) {
    const role = document.getElementById(`role-${profileId}`);
    const detailsSection = document.getElementById(`additional-details-${profileId}`);
    const errors = [];

    // Reset all validation styles
    document.querySelectorAll(`[id$="-${profileId}"]`).forEach(element => {
        if (element.tagName === 'INPUT' || element.tagName === 'SELECT' || element.tagName === 'TEXTAREA') {
            element.classList.remove('border-red-400/50', 'border-green-400/50');
            element.classList.add('border-blue-400/30');
        }
    });

    // Validate role
    if (!role.value) {
        errors.push('Role is required');
        role.classList.remove('border-blue-400/30');
        role.classList.add('border-red-400/50');
    } else {
        role.classList.remove('border-blue-400/30');
        role.classList.add('border-green-400/50');
    }

    // Only validate additional fields if they are visible
    if (!detailsSection.classList.contains('hidden')) {
        // Validate case details
        const details = document.getElementById(`details-${profileId}`);
        if (!details.value.trim()) {
            errors.push('Case details are required');
            details.classList.add('border-red-400/50');
        } else {
            details.classList.add('border-green-400/50');
        }

        // Validate articles
        const articles = document.getElementById(`articles-list-${profileId}`).children;
        const articleInput = document.getElementById(`article-${profileId}`);
        if (articles.length === 0) {
            errors.push('At least one article/section is required');
            document.getElementById(`articles-error-${profileId}`).classList.remove('hidden');
            articleInput.classList.add('border-red-400/50');
        } else {
            document.getElementById(`articles-error-${profileId}`).classList.add('hidden');
            articleInput.classList.add('border-green-400/50');
        }

        // Validate court details
        const courtFields = [
            { id: `court-name-${profileId}`, label: 'Court name' },
            { id: `court-case-number-${profileId}`, label: 'Court case number' },
            { id: `next-hearing-${profileId}`, label: 'Next hearing date' },
            { id: `judge-name-${profileId}`, label: 'Judge name' },
            { id: `court-status-${profileId}`, label: 'Court status' }
        ];

        courtFields.forEach(field => {
            const element = document.getElementById(field.id);
            const value = element.value;
            if (!value) {
                errors.push(`${field.label} is required`);
                element.classList.add('border-red-400/50');
            } else {
                element.classList.add('border-green-400/50');
            }
        });

        // Validate arrest details for accused
        if (role.value === 'accused') {
            const isArrested = document.getElementById(`is-arrested-${profileId}`).checked;
            if (isArrested) {
                const arrestFields = [
                    { id: `arrest-date-${profileId}`, label: 'Arrest date' },
                    { id: `arrest-location-${profileId}`, label: 'Arrest location' },
                    { id: `arresting-officer-${profileId}`, label: 'Arresting officer' }
                ];

                arrestFields.forEach(field => {
                    const element = document.getElementById(field.id);
                    const value = element.value;
                    if (!value) {
                        errors.push(`${field.label} is required`);
                        element.classList.add('border-red-400/50');
                    } else {
                        element.classList.add('border-green-400/50');
                    }
                });
            }
        }
    }

    return errors;
}

// Add input event listeners for real-time validation
function addInputValidationListeners(profileId) {
    const inputs = document.querySelectorAll(`[id$="-${profileId}"]`);
    inputs.forEach(input => {
        if (input.tagName === 'INPUT' || input.tagName === 'SELECT' || input.tagName === 'TEXTAREA') {
            input.addEventListener('input', function() {
                if (this.hasAttribute('required')) {
                    if (this.value.trim()) {
                        this.classList.remove('border-red-400/50', 'border-blue-400/30');
                        this.classList.add('border-green-400/50');
                    } else {
                        this.classList.remove('border-green-400/50', 'border-blue-400/30');
                        this.classList.add('border-red-400/50');
                    }
                }
            });
        }
    });
}

// Update the profile search event listener to add validation listeners
document.getElementById('profileSearch').addEventListener('input', async function(e) {
    // ... existing search code ...
    
    // After rendering the results, add validation listeners
    const profileCards = document.querySelectorAll('[id^="role-"]');
    profileCards.forEach(card => {
        const profileId = card.id.split('-')[1];
        addInputValidationListeners(profileId);
    });
});

// Function to validate and link profile
async function validateAndLink(profileId) {
    const errors = validateFields(profileId);
    
    if (errors.length > 0) {
        alert('Please fill in all required fields:\n\n' + errors.join('\n'));
        return;
    }

    await linkProfile(profileId);
}

// Function to toggle additional details
function toggleAdditionalDetails(profileId) {
    const detailsSection = document.getElementById(`additional-details-${profileId}`);
    const toggleButton = document.getElementById(`toggle-details-${profileId}`);
    
    if (detailsSection.classList.contains('hidden')) {
        detailsSection.classList.remove('hidden');
        toggleButton.textContent = 'Hide Details';
    } else {
        detailsSection.classList.add('hidden');
        toggleButton.textContent = 'Fill Details';
    }
}

// Add event listeners for role changes
document.querySelectorAll('[id^="role-"]').forEach(select => {
    select.addEventListener('change', function() {
        const profileId = this.id.split('-')[1];
        const arrestDetails = document.getElementById(`arrest-details-${profileId}`);
        const additionalDetails = document.getElementById(`additional-details-${profileId}`);
        
        if (this.value === 'accused' && !additionalDetails.classList.contains('hidden')) {
            arrestDetails.classList.remove('hidden');
        } else {
            arrestDetails.classList.add('hidden');
        }
    });
});

// Add event listeners for arrest checkbox
document.querySelectorAll('[id^="is-arrested-"]').forEach(checkbox => {
    checkbox.addEventListener('change', function() {
        const profileId = this.id.split('-')[2];
        const inputs = [
            document.getElementById(`arrest-date-${profileId}`),
            document.getElementById(`arrest-location-${profileId}`),
            document.getElementById(`arresting-officer-${profileId}`)
        ];
        inputs.forEach(input => {
            input.disabled = !this.checked;
            if (this.checked) {
                input.setAttribute('required', '');
            } else {
                input.removeAttribute('required');
            }
        });
    });
});

// Function to add articles
function addArticle(profileId) {
    const articleInput = document.getElementById(`article-${profileId}`);
    const articlesList = document.getElementById(`articles-list-${profileId}`);
    const article = articleInput.value.trim();
    
    if (article) {
        const articleElement = document.createElement('div');
        articleElement.className = 'flex justify-between items-center text-sm text-gray-100 bg-blue-400/10 rounded px-2 py-1';
        articleElement.innerHTML = `
            <span>${article}</span>
            <button onclick="this.parentElement.remove()" 
                    class="text-red-400 hover:text-red-300">×</button>
        `;
        articlesList.appendChild(articleElement);
        articleInput.value = '';
    }
}

// Update the linkProfile function to include new fields
async function linkProfile(profileId) {
    try {
        const role = document.getElementById(`role-${profileId}`).value;
        const details = document.getElementById(`details-${profileId}`).value;
        const articles = Array.from(document.getElementById(`articles-list-${profileId}`).children)
            .map(el => ({ section: el.querySelector('span').textContent }));
        
        const arrestDetails = role === 'accused' && document.getElementById(`is-arrested-${profileId}`).checked ? {
            isArrested: true,
            arrestDate: document.getElementById(`arrest-date-${profileId}`).value,
            arrestLocation: {
                english: document.getElementById(`arrest-location-${profileId}`).value
            },
            arrestingOfficer: document.getElementById(`arresting-officer-${profileId}`).value
        } : undefined;

        const courtDetails = {
            courtName: document.getElementById(`court-name-${profileId}`).value,
            caseNumber: document.getElementById(`court-case-number-${profileId}`).value,
            nextHearingDate: document.getElementById(`next-hearing-${profileId}`).value,
            judgeName: document.getElementById(`judge-name-${profileId}`).value,
            status: document.getElementById(`court-status-${profileId}`).value
        };

        const button = document.getElementById(`link-button-${profileId}`);
        if (button) {
            button.textContent = 'Linking...';
            button.disabled = true;
        }

        const response = await fetch(`/api/cases/<%= caseData._id %>/profiles`, {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ 
                profileId,
                role,
                details,
                articles,
                arrestDetails,
                courtDetails
            })
        });

        if (!response.ok) {
            throw new Error('Failed to link profile');
        }

        location.reload(); // Reload to show updated data

    } catch (error) {
        console.error('Error linking profile:', error);
        alert('Failed to link profile: ' + error.message);
        const button = document.getElementById(`link-button-${profileId}`);
        if (button) {
            button.textContent = 'Link';
            button.disabled = false;
        }
    }
}

async function unlinkProfile(profileId) {
    if (!confirm('Are you sure you want to unlink this profile?')) {
        return;
    }

    try {
        const caseId = '<%= caseData._id %>';
        const profileElement = event.target.closest('.py-4');

        const response = await fetch(`/api/cases/${caseId}/profiles/${profileId}`, {
            method: 'DELETE',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        });

        const data = await response.json();

        if (!response.ok) {
            throw new Error(data.error || 'Failed to unlink profile');
        }

        // Remove the profile element from the UI
        profileElement.remove();

        // Check if there are no more profiles
        const profilesContainer = document.querySelector('.divide-y.divide-blue-400\\/20');
        if (!profilesContainer.querySelector('.py-4')) {
            profilesContainer.innerHTML = '<p class="text-gray-400 py-4">No profiles connected to this case</p>';
        }

        showNotification('Profile unlinked successfully', 'success');
    } catch (error) {
        console.error('Error unlinking profile:', error);
        showNotification(error.message || 'Failed to unlink profile', 'error');
    }
}

async function updateCaseStatus(newStatus) {
    const confirmMessage = newStatus === 'closed' ? 
        'Are you sure you want to close this case?' : 
        'Are you sure you want to reopen this case?';
    
    if (!confirm(confirmMessage)) {
        return;
    }

    try {
        const caseId = '<%= caseData._id %>';
        const response = await fetch(`/cases/${caseId}/status`, {
            method: 'PATCH',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ status: newStatus })
        });

        const data = await response.json();

        if (!response.ok) {
            throw new Error(data.error || `Failed to ${newStatus === 'closed' ? 'close' : 'reopen'} case`);
        }

        showNotification(`Case ${newStatus === 'closed' ? 'closed' : 'reopened'} successfully`, 'success');
        // Refresh the page to show updated status
        window.location.reload();
    } catch (error) {
        console.error('Error updating case status:', error);
        showNotification(error.message || `Failed to ${newStatus === 'closed' ? 'close' : 'reopen'} case`, 'error');
    }
}

function showNotification(message, type = 'success') {
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 p-4 rounded-lg shadow-lg z-50 ${
        type === 'success' ? 'bg-green-500/20 text-green-400' : 'bg-red-500/20 text-red-400'
    }`;
    notification.textContent = message;

    document.body.appendChild(notification);

    setTimeout(() => {
        notification.remove();
    }, 3000);
}
</script> 